prototype(PunktDe.Elastic.Debug:Component.Molecule.Node) < prototype(Neos.Fusion:Component) {

    padding.@process.increment = ${value + '<span class="indent"></span>'}

    renderer = Neos.Fusion:Join {
        theNode = Neos.Fusion:Case {
            document  {
                condition = ${Neos.Node.isOfType(item, 'Neos.Neos:Document')}
                renderer = PunktDe.Elastic.Debug:Component.Atom.NodeDetail {
                    padding = ${props.padding}
                    class = 'list-group-item list-group-item-primary'
                }
            }

            collection  {
                condition = ${Neos.Node.isOfType(item, 'Neos.Neos:ContentCollection')}
                renderer = PunktDe.Elastic.Debug:Component.Atom.NodeDetail {
                    padding = ${props.padding}
                    class = 'list-group-item list-group-item-secondary'
                }
            }

            node  {
                condition = ${Neos.Node.isOfType(item, 'Neos.Neos:Content')}
                renderer = PunktDe.Elastic.Debug:Component.Atom.NodeDetail {
                    padding = ${props.padding}
                    class = 'list-group-item list-group-item-success'
                }

            }
        }
        subTree = PunktDe.Elastic.Debug:Component.Molecule.Subtree {
            rootNode = ${item}
            padding = ${props.padding}
        }
    }
}
